@model Projekt_zaliczeniowy.Models.ViewModels.AdminDashboardViewModel

@{
    ViewData["Title"] = "Panel Administratora";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <h2>Panel Administratora</h2>
            <p class="text-muted">Zarządzaj systemem korepetycji</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Wszyscy użytkownicy</h5>
                    <p class="display-4">@Model.TotalUsers</p>
                    <a href="@Url.Action("Users")" class="btn btn-light">
                        <i class="fas fa-users"></i> Zarządzaj użytkownikami
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Korepetytorzy</h5>
                    <p class="display-4">@Model.TotalTeachers.Count</p>
                    <a href="@Url.Action("Users")" class="btn btn-light">
                        <i class="fas fa-chalkboard-teacher"></i> Zobacz korepetytorów
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Uczniowie</h5>
                    <p class="display-4">@Model.TotalStudents.Count</p>
                    <a href="@Url.Action("Users")" class="btn btn-light">
                        <i class="fas fa-user-graduate"></i> Zobacz uczniów
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Ostatnie lekcje</h5>
                        <div>
                            <a href="@Url.Action("Payments")" class="btn btn-light btn-sm me-2">
                                <i class="fas fa-money-bill"></i> Zarządzaj płatnościami
                            </a>
                            <a href="@Url.Action("Lessons")" class="btn btn-light btn-sm">
                                <i class="fas fa-list"></i> Zobacz wszystkie lekcje
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.RecentLessons != null && Model.RecentLessons.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Data</th>
                                        <th>Przedmiot</th>
                                        <th>Korepetytor</th>
                                        <th>Uczeń</th>
                                        <th>Status</th>
                                        <th>Akcje</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var lesson in Model.RecentLessons)
                                    {
                                        <tr>
                                            <td>@lesson.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                                            <td>@lesson.Name</td>
                                            <td>@($"{lesson.Teacher.FirstName} {lesson.Teacher.LastName}")</td>
                                            <td>@($"{lesson.Student.FirstName} {lesson.Student.LastName}")</td>
                                            <td>
                                                <span class="badge bg-@(GetStatusBadgeClass(lesson.Status))">
                                                    @GetStatusText(lesson.Status)
                                                </span>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("EditLesson", new { id = lesson.Id })" 
                                                   class="btn btn-sm btn-primary">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">Brak ostatnich lekcji</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .card {
            transition: transform 0.2s;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            margin-bottom: 1rem;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .display-4 {
            font-size: 2.5rem;
            font-weight: 600;
            margin: 1rem 0;
        }

        .table td {
            vertical-align: middle;
        }
    </style>
}

@functions {
    string GetStatusBadgeClass(LessonStatus status)
    {
        return status switch
        {
            LessonStatus.Scheduled => "primary",
            LessonStatus.InProgress => "warning",
            LessonStatus.Completed => "success",
            LessonStatus.Cancelled => "danger",
            _ => "secondary"
        };
    }

    string GetStatusText(LessonStatus status)
    {
        return status switch
        {
            LessonStatus.Scheduled => "Zaplanowana",
            LessonStatus.InProgress => "W trakcie",
            LessonStatus.Completed => "Zakończona",
            LessonStatus.Cancelled => "Anulowana",
            _ => "Nieznany"
        };
    }
} 